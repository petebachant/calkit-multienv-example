stages:
  _check-env-my-conda-env:
    cmd: calkit check environment --name my-conda-env
    deps:
      - environment.yml
    outs:
      - .calkit/env-locks/my-conda-env.yml:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  _check-env-ubuntu:
    cmd: calkit check environment --name ubuntu
    deps: []
    outs:
      - .calkit/env-locks/ubuntu.json:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  _check-env-my-uv:
    cmd: calkit check environment --name my-uv
    deps:
      - pyproject.toml
    outs:
      - uv.lock:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  _check-env-uv-venv:
    cmd: calkit check environment --name uv-venv
    deps:
      - requirements.txt
    outs:
      - .calkit/env-locks/uv-venv.txt:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  _check-env-openfoam:
    cmd: calkit check environment --name openfoam
    deps:
      - Dockerfile
    outs:
      - .calkit/env-locks/openfoam.json:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  _check-env-my-venv:
    cmd: calkit check environment --name my-venv
    deps:
      - reqs-venv.txt
    outs:
      - .calkit/env-locks/my-venv.txt:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  _check-env-tf:
    cmd: calkit check environment --name tf
    deps:
      - reqs-tf.txt
    outs:
      - .calkit/env-locks/tf.txt:
          cache: false
          persist: true
    always_changed: true
    desc: Automatically generated by Calkit. Changes made here will be overwritten.
  my-conda-command:
    cmd: calkit xenv -n my-conda-env --no-check -- bash --noprofile --norc
      -c "which python > results/conda.txt"
    deps:
      - .calkit/env-locks/my-conda-env.yml
    outs:
      - results/conda.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-conda-command' stage in calkit.yaml.
      Changes made here will be overwritten.
  my-pixi-command:
    cmd: calkit xenv -n main --no-check -- bash --noprofile --norc -c "which
      python > results/pixi.txt"
    deps: []
    outs:
      - results/pixi.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-pixi-command' stage in calkit.yaml.
      Changes made here will be overwritten.
  my-docker-command:
    cmd: calkit xenv -n ubuntu --no-check -- bash --noprofile --norc -c
      "cat /etc/lsb-release > results/ubuntu.txt"
    deps:
      - .calkit/env-locks/ubuntu.json
    outs:
      - results/ubuntu.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-docker-command' stage in
      calkit.yaml. Changes made here will be overwritten.
  my-uv-command:
    cmd: calkit xenv -n my-uv --no-check -- bash --noprofile --norc -c "which
      python > results/uv.txt"
    deps:
      - uv.lock
    outs:
      - results/uv.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-uv-command' stage in calkit.yaml.
      Changes made here will be overwritten.
  my-uv-venv-command:
    cmd: calkit xenv -n uv-venv --no-check -- bash --noprofile --norc -c
      "which python > results/uv-venv.txt"
    deps:
      - .calkit/env-locks/uv-venv.txt
    outs:
      - results/uv-venv.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-uv-venv-command' stage in
      calkit.yaml. Changes made here will be overwritten.
  my-pixi-env-command:
    cmd: calkit xenv -n pixi2 --no-check -- bash --noprofile --norc -c "python
      -c \"import plotly; print(plotly.__file__)\" > results/pixi2.txt"
    deps: []
    outs:
      - results/pixi2.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-pixi-env-command' stage in
      calkit.yaml. Changes made here will be overwritten.
  my-openfoam-command:
    cmd: calkit xenv -n openfoam --no-check -- bash --noprofile --norc -c
      "icoFoam -help > results/openfoam.txt"
    deps:
      - .calkit/env-locks/openfoam.json
    outs:
      - results/openfoam.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-openfoam-command' stage in
      calkit.yaml. Changes made here will be overwritten.
  my-venv-command:
    cmd: calkit xenv -n my-venv --no-check -- bash --noprofile --norc -c
      "python -c \"import polars; print(polars.__version__)\" > results/venv.txt"
    deps:
      - .calkit/env-locks/my-venv.txt
    outs:
      - results/venv.txt:
          cache: false
          persist: false
    desc: Automatically generated from the 'my-venv-command' stage in calkit.yaml.
      Changes made here will be overwritten.
